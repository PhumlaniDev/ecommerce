name: Build, Test, and Analyze

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.DB }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASS }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          architecture: 'x64'
          server-id: 'github'
          server-username: ${{ github.actor }}
          server-password: ${{ secrets.GITHUB_TOKEN }}
          overwrite: true
          clean-path: false

      - name: Build with Maven
        run: mvn -B clean package

      - name: Run tests
        run: mvn test

  sonarqube:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          architecture: 'x64'
          server-id: 'github'
          server-username: ${{ github.actor }}
          server-password: ${{ secrets.GITHUB_TOKEN }}
          overwrite: true
          clean-path: false
          projectBaseDir: './'
          fetch-depth: 0

      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: "${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}"
          restore-keys: ${{ runner.os }}-maven

      - name: SonarQube Scan
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ecommerce-app -Dsonar.projectName='Ecommerce-app'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}


  create-pr:
    runs-on: ubuntu-latest
    needs: [build, sonarqube]

    steps:
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'Automated PR creation'
          title: 'Automatic PR from Develop'
          body: 'This PR was automatically created because of changes in the Develop branch.'
          branch: 'develop'
          base: 'main'

  notify:
    runs-on: ubuntu-latest
    needs: [build, sonarqube, create-pr]

    steps:
      - name: Send email on failure
        if: ${{ failure() }}
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.example.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: 'Workflow Failed: Build, Test, and Analyze'
          to: ${{ secrets.EMAIL_USERNAME }}
          from: ${{ secrets.EMAIL_USERNAME }}
          body: |
            The workflow failed to build, test, or analyze the code.
